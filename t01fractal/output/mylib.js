"use strict";let e,n,o,t,r,i,a=0,l=0,s=0;function c(e,o){const t=n.createShader(e);if(n.shaderSource(t,o),n.compileShader(t),!n.getShaderParameter(t,n.COMPILE_STATUS)){let e=n.getShaderInfoLog(t);console.log("Shader compile fail: "+e)}return t}let u=!1;function m(){if(n.clear(n.COLOR_BUFFER_BIT),-1!=o){const e=new Date;let t=60*e.getMinutes()+e.getSeconds()+e.getMilliseconds()/1e3;n.uniform1f(o,t)}-1!=t&&(e.addEventListener("mousedown",(e=>{r=e.clientX,i=e.clientY,u=!0})),e.addEventListener("mousemove",(e=>{!function(e){let n=e.clientX,o=e.clientY;u&&(a-=n-r,s+=o-i,i=o,r=n)}(e)})),e.addEventListener("mouseup",(()=>{u=!1})),e.addEventListener("mouseout",(()=>{u=!1})),e.addEventListener("mousewheel",(e=>{l+=e.wheelDelta/4e4})),n.uniform3f(t,a,s,l)),n.drawArrays(n.TRIANGLE_STRIP,0,4)}window.addEventListener("load",(()=>{!function(){e=document.getElementById("MyGL"),n=e.getContext("webgl2"),n.clearColor(.3,.47,.8,1);let r=c(n.VERTEX_SHADER,"#version 300 es\n  precision highp float;\n  in vec3 InPosition;\n\n  uniform float Time;\n  uniform vec3 Mouse;\n\n  out vec2 DrawPos;\n\n  void main( void )\n  {\n    gl_Position = vec4(InPosition, 1);\n    // gl_Position.x += 0.1 * sin(Time);\n    DrawPos = InPosition.xy + Mouse.xy / 400.0;\n  }\n  "),i=c(n.FRAGMENT_SHADER,"#version 300 es\n  precision highp float;\n  out vec4 OutColor;\n\n  in vec2 DrawPos;\n  uniform float Time;\n  uniform vec3 Mouse;\n\n  vec2 CmplMulCmpl( vec2 Z1, vec2 Z2 )\n  {\n    return vec2(Z1.x * Z2.x - Z1.y * Z2.y, Z1.x * Z2.y + Z1.y * Z2.x);\n  }\n\n  float julia( vec2 Z )\n  {\n    float n = 1.0;\n\n    while (n < 255.0 && length(Z) < 20.0)\n    {\n      Z = CmplMulCmpl(Z, Z) + vec2(sin(Time / 2.0) / 7.5, sin(Time / 2.0) / 1.3);\n      n += 1.0;\n    }\n    return n;\n  }\n\n  void main( void )\n  {\n    float n;\n    vec2 Z;\n  \n    Z = DrawPos;\n    n = julia(Z);\n    OutColor = vec4(n / 30.0, n / 47.0, n / 80.0, 1);\n  }\n  "),a=n.createProgram();if(n.attachShader(a,r),n.attachShader(a,i),n.linkProgram(a),!n.getProgramParameter(a,n.LINK_STATUS)){let e=n.getProgramInfoLog(a);console.log("Shader program link error: "+e)}const l=.99,s=[-.99,l,0,-.99,-.99,0,l,l,0,l,-.99,0],u=n.getAttribLocation(a,"InPosition");let m=n.createVertexArray();n.bindVertexArray(m);let d=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,d),n.bufferData(n.ARRAY_BUFFER,new Float32Array(s),n.STATIC_DRAW),-1!=u&&(n.vertexAttribPointer(u,3,n.FLOAT,!1,0,0),n.enableVertexAttribArray(u)),o=n.getUniformLocation(a,"Time"),t=n.getUniformLocation(a,"Mouse"),n.useProgram(a)}();const r=()=>{m(),window.requestAnimationFrame(r)};r()})),console.log("Done.");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXlsaWIuanMiLCJzb3VyY2VzIjpbIi4uL3NyYy9teWxpYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY2FudmFzLFxyXG4gIGdsLFxyXG4gIHRpbWVMb2MsXHJcbiAgbW91c2VMb2MsXHJcbiAgbW91c2VQb3NYID0gMCxcclxuICBNb3VzZVogPSAwLFxyXG4gIG1vdXNlUG9zWSA9IDA7XHJcblxyXG5mdW5jdGlvbiBpbml0R0woKSB7XHJcbiAgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJNeUdMXCIpO1xyXG4gIGdsID0gY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbDJcIik7XHJcbiAgZ2wuY2xlYXJDb2xvcigwLjMsIDAuNDcsIDAuOCwgMSk7XHJcblxyXG4gIC8vIFNoYWRlciBjcmVhdGlvblxyXG4gIGxldCB2c190eHQgPSBgI3ZlcnNpb24gMzAwIGVzXHJcbiAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xyXG4gIGluIHZlYzMgSW5Qb3NpdGlvbjtcclxuXHJcbiAgdW5pZm9ybSBmbG9hdCBUaW1lO1xyXG4gIHVuaWZvcm0gdmVjMyBNb3VzZTtcclxuXHJcbiAgb3V0IHZlYzIgRHJhd1BvcztcclxuXHJcbiAgdm9pZCBtYWluKCB2b2lkIClcclxuICB7XHJcbiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQoSW5Qb3NpdGlvbiwgMSk7XHJcbiAgICAvLyBnbF9Qb3NpdGlvbi54ICs9IDAuMSAqIHNpbihUaW1lKTtcclxuICAgIERyYXdQb3MgPSBJblBvc2l0aW9uLnh5ICsgTW91c2UueHkgLyA0MDAuMDtcclxuICB9XHJcbiAgYDtcclxuICBsZXQgZnNfdHh0ID0gYCN2ZXJzaW9uIDMwMCBlc1xyXG4gIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcclxuICBvdXQgdmVjNCBPdXRDb2xvcjtcclxuXHJcbiAgaW4gdmVjMiBEcmF3UG9zO1xyXG4gIHVuaWZvcm0gZmxvYXQgVGltZTtcclxuICB1bmlmb3JtIHZlYzMgTW91c2U7XHJcblxyXG4gIHZlYzIgQ21wbE11bENtcGwoIHZlYzIgWjEsIHZlYzIgWjIgKVxyXG4gIHtcclxuICAgIHJldHVybiB2ZWMyKFoxLnggKiBaMi54IC0gWjEueSAqIFoyLnksIFoxLnggKiBaMi55ICsgWjEueSAqIFoyLngpO1xyXG4gIH1cclxuXHJcbiAgZmxvYXQganVsaWEoIHZlYzIgWiApXHJcbiAge1xyXG4gICAgZmxvYXQgbiA9IDEuMDtcclxuXHJcbiAgICB3aGlsZSAobiA8IDI1NS4wICYmIGxlbmd0aChaKSA8IDIwLjApXHJcbiAgICB7XHJcbiAgICAgIFogPSBDbXBsTXVsQ21wbChaLCBaKSArIHZlYzIoc2luKFRpbWUgLyAyLjApIC8gNy41LCBzaW4oVGltZSAvIDIuMCkgLyAxLjMpO1xyXG4gICAgICBuICs9IDEuMDtcclxuICAgIH1cclxuICAgIHJldHVybiBuO1xyXG4gIH1cclxuXHJcbiAgdm9pZCBtYWluKCB2b2lkIClcclxuICB7XHJcbiAgICBmbG9hdCBuO1xyXG4gICAgdmVjMiBaO1xyXG4gIFxyXG4gICAgWiA9IERyYXdQb3M7XHJcbiAgICBuID0ganVsaWEoWik7XHJcbiAgICBPdXRDb2xvciA9IHZlYzQobiAvIDMwLjAsIG4gLyA0Ny4wLCBuIC8gODAuMCwgMSk7XHJcbiAgfVxyXG4gIGA7XHJcbiAgbGV0IHZzID0gbG9hZFNoYWRlcihnbC5WRVJURVhfU0hBREVSLCB2c190eHQpLFxyXG4gICAgZnMgPSBsb2FkU2hhZGVyKGdsLkZSQUdNRU5UX1NIQURFUiwgZnNfdHh0KSxcclxuICAgIHByZyA9IGdsLmNyZWF0ZVByb2dyYW0oKTtcclxuICBnbC5hdHRhY2hTaGFkZXIocHJnLCB2cyk7XHJcbiAgZ2wuYXR0YWNoU2hhZGVyKHByZywgZnMpO1xyXG4gIGdsLmxpbmtQcm9ncmFtKHByZyk7XHJcbiAgaWYgKCFnbC5nZXRQcm9ncmFtUGFyYW1ldGVyKHByZywgZ2wuTElOS19TVEFUVVMpKSB7XHJcbiAgICBsZXQgYnVmID0gZ2wuZ2V0UHJvZ3JhbUluZm9Mb2cocHJnKTtcclxuICAgIGNvbnNvbGUubG9nKFwiU2hhZGVyIHByb2dyYW0gbGluayBlcnJvcjogXCIgKyBidWYpO1xyXG4gIH1cclxuXHJcbiAgLy8gVmVydGV4IGJ1ZmZlciBjcmVhdGlvblxyXG4gIGNvbnN0IHNpemUgPSAwLjk5O1xyXG4gIGNvbnN0IHZlcnRleGVzID0gW1xyXG4gICAgLXNpemUsXHJcbiAgICBzaXplLFxyXG4gICAgMCxcclxuICAgIC1zaXplLFxyXG4gICAgLXNpemUsXHJcbiAgICAwLFxyXG4gICAgc2l6ZSxcclxuICAgIHNpemUsXHJcbiAgICAwLFxyXG4gICAgc2l6ZSxcclxuICAgIC1zaXplLFxyXG4gICAgMCxcclxuICBdO1xyXG4gIGNvbnN0IHBvc0xvYyA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHByZywgXCJJblBvc2l0aW9uXCIpO1xyXG4gIGxldCB2ZXJ0ZXhBcnJheSA9IGdsLmNyZWF0ZVZlcnRleEFycmF5KCk7XHJcbiAgZ2wuYmluZFZlcnRleEFycmF5KHZlcnRleEFycmF5KTtcclxuICBsZXQgdmVydGV4QnVmZXIgPSBnbC5jcmVhdGVCdWZmZXIoKTtcclxuICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgdmVydGV4QnVmZXIpO1xyXG4gIGdsLmJ1ZmZlckRhdGEoZ2wuQVJSQVlfQlVGRkVSLCBuZXcgRmxvYXQzMkFycmF5KHZlcnRleGVzKSwgZ2wuU1RBVElDX0RSQVcpO1xyXG4gIGlmIChwb3NMb2MgIT0gLTEpIHtcclxuICAgIGdsLnZlcnRleEF0dHJpYlBvaW50ZXIocG9zTG9jLCAzLCBnbC5GTE9BVCwgZmFsc2UsIDAsIDApO1xyXG4gICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkocG9zTG9jKTtcclxuICB9XHJcbiAgLy8gVW5pZm9ybSBkYXRhXHJcbiAgdGltZUxvYyA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwiVGltZVwiKTtcclxuICBtb3VzZUxvYyA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwiTW91c2VcIik7XHJcblxyXG4gIGdsLnVzZVByb2dyYW0ocHJnKTtcclxufVxyXG5cclxuLy8gTG9hZCBhbmQgY29tcGlsZSBzaGFkZXIgZnVuY3Rpb25cclxuZnVuY3Rpb24gbG9hZFNoYWRlcihzaGFkZXJUeXBlLCBzaGFkZXJTb3VyY2UpIHtcclxuICBjb25zdCBzaGFkZXIgPSBnbC5jcmVhdGVTaGFkZXIoc2hhZGVyVHlwZSk7XHJcbiAgZ2wuc2hhZGVyU291cmNlKHNoYWRlciwgc2hhZGVyU291cmNlKTtcclxuICBnbC5jb21waWxlU2hhZGVyKHNoYWRlcik7XHJcbiAgaWYgKCFnbC5nZXRTaGFkZXJQYXJhbWV0ZXIoc2hhZGVyLCBnbC5DT01QSUxFX1NUQVRVUykpIHtcclxuICAgIGxldCBidWYgPSBnbC5nZXRTaGFkZXJJbmZvTG9nKHNoYWRlcik7XHJcbiAgICBjb25zb2xlLmxvZyhcIlNoYWRlciBjb21waWxlIGZhaWw6IFwiICsgYnVmKTtcclxuICB9XHJcbiAgcmV0dXJuIHNoYWRlcjtcclxufSAvLyBFbmQgb2YgJ2xvYWRTaGFkZXInIGZ1bmN0aW9uXHJcblxyXG5sZXQgeCA9IDAsXHJcbiAgT2xkTW91c2VYLFxyXG4gIE9sZE1vdXNlWTtcclxuXHJcbmxldCBJc01vdXNlRG93biA9IGZhbHNlO1xyXG5cclxuLy8gTWFpbiByZW5kZXIgZnJhbWUgZnVuY3Rpb24uXHJcbmZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICBnbC5jbGVhcihnbC5DT0xPUl9CVUZGRVJfQklUKTtcclxuXHJcbiAgaWYgKHRpbWVMb2MgIT0gLTEpIHtcclxuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgbGV0IHQgPVxyXG4gICAgICBkYXRlLmdldE1pbnV0ZXMoKSAqIDYwICtcclxuICAgICAgZGF0ZS5nZXRTZWNvbmRzKCkgK1xyXG4gICAgICBkYXRlLmdldE1pbGxpc2Vjb25kcygpIC8gMTAwMDtcclxuXHJcbiAgICBnbC51bmlmb3JtMWYodGltZUxvYywgdCk7XHJcbiAgfVxyXG4gIGlmIChtb3VzZUxvYyAhPSAtMSkge1xyXG4gICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2ZW50KSA9PiB7XHJcbiAgICAgIE9sZE1vdXNlWCA9IGV2ZW50LmNsaWVudFg7XHJcbiAgICAgIE9sZE1vdXNlWSA9IGV2ZW50LmNsaWVudFk7XHJcbiAgICAgIElzTW91c2VEb3duID0gdHJ1ZTtcclxuICAgIH0pO1xyXG4gICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGZyYWN0YWxNb3ZlKGV2ZW50KTtcclxuICAgIH0pO1xyXG4gICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsICgpID0+IHtcclxuICAgICAgSXNNb3VzZURvd24gPSBmYWxzZTtcclxuICAgIH0pO1xyXG4gICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCAoKSA9PiB7XHJcbiAgICAgIElzTW91c2VEb3duID0gZmFsc2U7XHJcbiAgICB9KTtcclxuICAgIGNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V3aGVlbFwiLCAoZXZlbnQpID0+IHtcclxuICAgICAgTW91c2VaICs9IGV2ZW50LndoZWVsRGVsdGEgLyA0MDAwMDtcclxuICAgIH0pO1xyXG5cclxuICAgIGdsLnVuaWZvcm0zZihtb3VzZUxvYywgbW91c2VQb3NYLCBtb3VzZVBvc1ksIE1vdXNlWik7XHJcbiAgfVxyXG5cclxuICBnbC5kcmF3QXJyYXlzKGdsLlRSSUFOR0xFX1NUUklQLCAwLCA0KTtcclxuICBcclxufSAvKiBFbmQgb2YgJ3JlbmRlcicgZmluY3Rpb24gKi9cclxuXHJcbmZ1bmN0aW9uIGZyYWN0YWxNb3ZlKGV2ZW50KSB7XHJcbiAgbGV0IFggPSBldmVudC5jbGllbnRYLFxyXG4gICAgWSA9IGV2ZW50LmNsaWVudFk7XHJcblxyXG4gIGlmIChJc01vdXNlRG93bikge1xyXG4gICAgbW91c2VQb3NYIC09IFggLSBPbGRNb3VzZVg7XHJcbiAgICBtb3VzZVBvc1kgKz0gWSAtIE9sZE1vdXNlWTtcclxuICAgIChPbGRNb3VzZVkgPSBZKSwgKE9sZE1vdXNlWCA9IFgpO1xyXG4gIH1cclxufVxyXG5cclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHtcclxuICAgICAgICBpbml0R0woKTtcclxuICAgICAgICBjb25zdCBkcmF3ID0gKCkgPT4ge1xyXG4gICAgICAgICAgcmVuZGVyKCk7XHJcbiAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGRyYXcpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgZHJhdygpO1xyXG4gICAgICB9KTtcclxuXHJcbmNvbnNvbGUubG9nKFwiRG9uZS5cIik7XHJcbiJdLCJuYW1lcyI6WyJjYW52YXMiLCJnbCIsInRpbWVMb2MiLCJtb3VzZUxvYyIsIk9sZE1vdXNlWCIsIk9sZE1vdXNlWSIsIm1vdXNlUG9zWCIsIk1vdXNlWiIsIm1vdXNlUG9zWSIsImxvYWRTaGFkZXIiLCJzaGFkZXJUeXBlIiwic2hhZGVyU291cmNlIiwic2hhZGVyIiwiY3JlYXRlU2hhZGVyIiwiY29tcGlsZVNoYWRlciIsImdldFNoYWRlclBhcmFtZXRlciIsIkNPTVBJTEVfU1RBVFVTIiwiYnVmIiwiZ2V0U2hhZGVySW5mb0xvZyIsImNvbnNvbGUiLCJsb2ciLCJJc01vdXNlRG93biIsInJlbmRlciIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsImRhdGUiLCJEYXRlIiwidCIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZ2V0TWlsbGlzZWNvbmRzIiwidW5pZm9ybTFmIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiY2xpZW50WCIsImNsaWVudFkiLCJYIiwiWSIsImZyYWN0YWxNb3ZlIiwid2hlZWxEZWx0YSIsInVuaWZvcm0zZiIsImRyYXdBcnJheXMiLCJUUklBTkdMRV9TVFJJUCIsIndpbmRvdyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRDb250ZXh0IiwiY2xlYXJDb2xvciIsInZzIiwiVkVSVEVYX1NIQURFUiIsImZzIiwiRlJBR01FTlRfU0hBREVSIiwicHJnIiwiY3JlYXRlUHJvZ3JhbSIsImF0dGFjaFNoYWRlciIsImxpbmtQcm9ncmFtIiwiZ2V0UHJvZ3JhbVBhcmFtZXRlciIsIkxJTktfU1RBVFVTIiwiZ2V0UHJvZ3JhbUluZm9Mb2ciLCJzaXplIiwidmVydGV4ZXMiLCJwb3NMb2MiLCJnZXRBdHRyaWJMb2NhdGlvbiIsInZlcnRleEFycmF5IiwiY3JlYXRlVmVydGV4QXJyYXkiLCJiaW5kVmVydGV4QXJyYXkiLCJ2ZXJ0ZXhCdWZlciIsImNyZWF0ZUJ1ZmZlciIsImJpbmRCdWZmZXIiLCJBUlJBWV9CVUZGRVIiLCJidWZmZXJEYXRhIiwiRmxvYXQzMkFycmF5IiwiU1RBVElDX0RSQVciLCJ2ZXJ0ZXhBdHRyaWJQb2ludGVyIiwiRkxPQVQiLCJlbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSIsImdldFVuaWZvcm1Mb2NhdGlvbiIsInVzZVByb2dyYW0iLCJpbml0R0wiLCJkcmF3IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIl0sIm1hcHBpbmdzIjoiYUFBQSxJQUFJQSxFQUNGQyxFQUNBQyxFQUNBQyxFQXVIQUMsRUFDQUMsRUF2SEFDLEVBQVksRUFDWkMsRUFBUyxFQUNUQyxFQUFZLEVBd0dkLFNBQVNDLEVBQVdDLEVBQVlDLEdBQzlCLE1BQU1DLEVBQVNYLEVBQUdZLGFBQWFILEdBRy9CLEdBRkFULEVBQUdVLGFBQWFDLEVBQVFELEdBQ3hCVixFQUFHYSxjQUFjRixJQUNaWCxFQUFHYyxtQkFBbUJILEVBQVFYLEVBQUdlLGdCQUFpQixDQUNyRCxJQUFJQyxFQUFNaEIsRUFBR2lCLGlCQUFpQk4sR0FDOUJPLFFBQVFDLElBQUksd0JBQTBCSCxFQUN2QyxDQUNELE9BQU9MLENBQ1QsQ0FNQSxJQUFJUyxHQUFjLEVBR2xCLFNBQVNDLElBR1AsR0FGQXJCLEVBQUdzQixNQUFNdEIsRUFBR3VCLG1CQUVJLEdBQVp0QixFQUFlLENBQ2pCLE1BQU11QixFQUFPLElBQUlDLEtBQ2pCLElB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
